/*! shopify/storefront-api-client@0.2.3 -- Copyright (c) 2023-present, Shopify Inc. -- license (MIT): https://github.com/Shopify/shopify-api-js/blob/main/LICENSE.md */
!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).ShopifyStorefrontAPIClient={})}(this,(function(e){"use strict";const r="GraphQL Client",t=0,n=3,o="An error occurred while fetching from the API. Review 'graphQLErrors' for details.",s="Response returned unexpected Content-Type:",i="An unknown error has occurred. The API did not return a data object or any errors in its response.",a={json:"application/json",multipart:"multipart/mixed"},c=1e3,u=[429,503];function p(e,t=r){return e.startsWith(`${t}`)?e:`${t}: ${e}`}function l(e){return e instanceof Error?e.message:JSON.stringify(e)}function f({client:e,retries:r}){if(void 0!==r&&("number"!=typeof r||r<t||r>n))throw new Error(`${e}: The provided "retries" value (${r}) is invalid - it cannot be less than ${t} or greater than ${n}`)}function d(e,r){return r&&("object"!=typeof r||Array.isArray(r)||"object"==typeof r&&Object.keys(r).length>0)?{[e]:r}:{}}function h({clientLogger:e,customFetchApi:t=fetch,client:n=r,defaultRetryWaitTime:o=c,retriableCodes:s=u}){const i=async(r,a,c)=>{const u=a+1,f=c+1;let d;try{if(d=await t(...r),e({type:"HTTP-Response",content:{requestParams:r,response:d}}),!d.ok&&s.includes(d.status)&&u<=f)throw new Error;return d}catch(t){if(u<=f){const t=d?.headers.get("Retry-After");return await async function(e){return new Promise((r=>setTimeout(r,e)))}(t?parseInt(t,10):o),e({type:"HTTP-Retry",content:{requestParams:r,lastResponse:d,retryAttempt:a,maxRetries:c}}),i(r,u,c)}throw new Error(p(`${c>0?`Attempted maximum number of ${c} network retries. Last message - `:""}${l(t)}`,n))}};return i}function m({headers:e,url:t,customFetchApi:n=$,retries:u=0,logger:m}){f({client:r,retries:u});const y={headers:e,url:t,retries:u},g=function(e){return r=>{e&&e(r)}}(m),$=function(e,{url:t,headers:n,retries:o}){return async(s,i={})=>{const{variables:a,headers:c,url:u,retries:p}=i,l=JSON.stringify({query:s,variables:a});f({client:r,retries:p});const d=Object.fromEntries(Object.entries({...n,...c}).map((([e,r])=>[e,Array.isArray(r)?r.join(", "):r.toString()])));return e([u??t,{method:"POST",headers:d,body:l}],1,p??o)}}(h({customFetchApi:n,clientLogger:g,defaultRetryWaitTime:c}),y),w=function(e){return async(...r)=>{try{const t=await e(...r),{status:n,statusText:c}=t,u=t.headers.get("content-type")||"";return t.ok?u.includes(a.json)?async function(e){const{errors:r,data:t,extensions:n}=await e.json();return{...d("data",t),...d("extensions",n),...r||!t?{errors:{networkStatusCode:e.status,message:p(r?o:i),...d("graphQLErrors",r),response:e}}:{}}}(t):{errors:{networkStatusCode:n,message:p(`${s} ${u}`),response:t}}:{errors:{networkStatusCode:n,message:p(c),response:t}}}catch(e){return{errors:{message:l(e)}}}}}($);return{config:y,fetch:$,request:w}}function y({client:e,currentSupportedApiVersions:r,apiVersion:t,logger:n}){const o=`${e}: the provided apiVersion ("${t}")`,s=`Currently supported API versions: ${r.join(", ")}`;if(!t||"string"!=typeof t)throw new Error(`${o} is invalid. ${s}`);const i=t.trim();r.includes(i)||(n?n({type:"Unsupported_Api_Version",content:{apiVersion:t,supportedApiVersions:r}}):console.warn(`${o} is likely deprecated or not supported. ${s}`))}function g(e){const r=3*e-2;return 10===r?r:`0${r}`}function $(e,r,t){const n=r-t;return n<=0?`${e-1}-${g(n+4)}`:`${e}-${g(n)}`}function w(){const{year:e,quarter:r,version:t}=function(){const e=new Date,r=e.getUTCMonth(),t=e.getUTCFullYear(),n=Math.floor(r/3+1);return{year:t,quarter:n,version:`${t}-${g(n)}`}}(),n=4===r?`${e+1}-01`:`${e}-${g(r+1)}`;return[$(e,r,3),$(e,r,2),$(e,r,1),t,n,"unstable"]}const A="application/json",b="Storefront API Client";e.createStorefrontApiClient=function({storeDomain:e,apiVersion:r,publicAccessToken:t,privateAccessToken:n,clientName:o,retries:s=0,customFetchApi:i,logger:a}){const c=w(),u=function({client:e,storeDomain:r}){try{if(!r||"string"!=typeof r)throw new Error;const e=r.trim(),t=e.startsWith("http")?e:`https://${e}`,n=new URL(t);return n.protocol="https",n.origin}catch(t){throw new Error(`${e}: a valid store domain ("${r}") must be provided`)}}({client:b,storeDomain:e}),p={client:b,currentSupportedApiVersions:c,logger:a};y({...p,apiVersion:r}),function(e,r){if(!e&&!r)throw new Error(`${b}: a public or private access token must be provided`);if(e&&r)throw new Error(`${b}: only provide either a public or private access token`)}(t,n),function(e){if(e&&"undefined"!=typeof window)throw new Error(`${b}: private access tokens and headers should only be used in a server-to-server implementation. Use the public API access token in nonserver environments.`)}(n);const l=function(e,r,t){return n=>{n&&y({...t,apiVersion:n});const o=(n??r).trim();return`${e}/api/${o}/graphql.json`}}(u,r,p),f={storeDomain:u,apiVersion:r,...t?{publicAccessToken:t}:{privateAccessToken:n},headers:{"Content-Type":A,Accept:A,"X-SDK-Variant":"storefront-api-client","X-SDK-Version":"0.2.3",...o?{"X-SDK-Variant-Source":o}:{},...t?{"X-Shopify-Storefront-Access-Token":t}:{"Shopify-Storefront-Private-Token":n}},apiUrl:l(),clientName:o},d=m({headers:f.headers,url:f.apiUrl,retries:s,customFetchApi:i,logger:a}),h=function(e){return r=>({...r??{},...e.headers})}(f),g=function(e,r){return t=>t?r(t):e.apiUrl}(f,l),$=function({getHeaders:e,getApiUrl:r}){return(t,n)=>{const o=[t];if(n&&Object.keys(n).length>0){const{variables:t,apiVersion:s,headers:i,retries:a}=n;o.push({...t?{variables:t}:{},...i?{headers:e(i)}:{},...s?{url:r(s)}:{},...a?{retries:a}:{}})}return o}}({getHeaders:h,getApiUrl:g}),v={config:f,getHeaders:h,getApiUrl:g,fetch:(...e)=>d.fetch(...$(...e)),request:(...e)=>d.request(...$(...e))};return Object.freeze(v)}}));
//# sourceMappingURL=storefront-api-client.min.js.map